name: Node.js CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     node-version: [12.x]

    steps:
    
      - uses: actions/checkout@v2
      # - run: echo ::set-env name=FILENAME::ReadMeSquelette.md

      - run:  echo GITHUB_REPOSITORY=$GITHUB_REPOSITORY > report_correction.txt

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: ReadMeSquelette.md
         text: "D'où vient l'idée de base pour ce squelette?;Le Joueur demande à redémarrer l'application;Le Système termine tous les jeux en cours et redémarre l'application;- d3.valeur est devenue un nombre entier aléatoire entre 1 et 6;- j.nbLancersGagnés a été incrémenté si la totale de d1.valeur, d2.valeur, d3.valeur est plus petit ou égal à 10"
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: docs/modeles/dcu.puml
         text: "(Redémarrer) as R #powderblue;J -- R"
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: docs/modeles/dss-redemarrer.puml
         text: ":Joueur;:Système;redémarrerJeu();->"
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: docs/modeles/rdcu-redemarrer.puml
         text: ":JeuDeDes;joueurs:;Map<String,Joueur>;redemarrerJeu();clear(); Contrôleur;Expert"
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "test/redemarrer.test.ts"
         text: "GET /api/v1/jeu/redemarrerJeu;Call responds with bad request when players do not exist"
         report: "report_correction.txt"
   
      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "src/routes/JeuRouter.ts"
         text: "this.router.get('/redemarrerJeu', this.redemarrerJeu.bind(this));public redemarrerJeu(req: Request, res: Response, next: NextFunction) {;this.jeu.redemarrerJeu();résultat.v3"
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "src/core/JeuDeDes.ts"
         text: "public redemarrerJeu() {;this.joueurs.clear();private d3 : De;this.d3 = new De();this.d3.brasser();let v3 = this.d3.getValeur(); let somme = v1 + v2 + v3;<= 10; v3: v3,"
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "views/index.pug"
         text: "button.redemarrer Redémarrer"
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "public/lib/main.js"
         text: '$("button.redemarrer").click(function () {;$.get("/api/v1/jeu/redemarrerJeu"'
         report: "report_correction.txt"
      
      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "docs/modeles/mdd.puml"
         text: 'JeuDeDés "1" -- "3" Dé : inclut >'
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "docs/modeles/rdcu-jouer.puml"
         text: 'participant "d3:De" as d3;participant "d3:De" as d3;c->d3 : brasser();note right : selon Expert;c->d3 : v3 = getValeur();note right : selon Expert;opt v1 + v2 + v3 <= 10'
         report: "report_correction.txt"

      - name: text exist
        uses: ./.github/actions/text-exist
        with:
         filename: "test/jeu.test.ts"
         text: 'expect(response.body.résultat.v3).toBeWithin(1, 7);'
         report: "report_correction.txt"

    
      - name: text-exist statistics
        id: statistics
        run: |
          file_missing=$(cat report_correction.txt | grep EXIST | grep false | wc -l)
          nb_error=$(cat report_correction.txt | grep ERROR |  wc -l)
          nb_success=$(cat report_correction.txt | grep SUCCES | wc -l)
          total_text_exist=$(( $nb_error + $nb_success ))
          percent_success=$(( $nb_success  / $total_text_exist )).$(( ($nb_success  * 100 / $total_text_exist) % 100 ))
          
          echo "::set-output name=file_missing::$file_missing"
          echo "::set-output name=nb_error::$nb_error"
          echo "::set-output name=nb_success::$nb_success"
          echo "::set-output name=total_text_exist::$total_text_exist"
          echo "::set-output name=percent_success::percent_success"

          echo " " >> report_correction.txt
          echo "Text exist statistics" >> report_correction.txt
          echo "file_missing=$file_missing"  >> report_correction.txt
          echo "nb_error=$nb_error" >> report_correction.txt
          echo "nb_success=$nb_success" >> report_correction.txt
          echo "total_text_exist=$total_text_exist" >> report_correction.txt
          echo "percent_success=$percent_success" >> report_correction.txt


      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: |
          npm install
          npm run build --if-present
          npm run testj > jest.json

      - name: test stats
        id: test_stats
        run: |
          numPassedTests=$(grep -o '"numPassedTests":[0-9][0-9,\"][0-9,\"]' jest.json | tr -d ',' | tr -d '"') 
          numPassedTests=${numPassedTests//'numPassedTests:'/}
          numFailedTests=$(grep -o '"numFailedTests":[0-9][0-9,\"][0-9,\"]' jest.json | tr -d ',' | tr -d '"') 
          numFailedTests=${numFailedTests//'numFailedTests:'/}
          nb_total_test=$(( $numPassedTests + $numFailedTests ))
          echo "::set-output name=nb_total_test::$nb_total_test"
          echo "::set-output name=num_passed_tests::$numPassedTests"
    
          percent_test=$(( $numPassedTests / $nb_total_test ))     

          echo " " >> report_correction.txt
          echo "test statistics" >> report_correction.txt 
          echo "numPassedTests=$numPassedTests" >> report_correction.txt
          echo "numFailedTests=$numFailedTests" >> report_correction.txt
          echo "percent_test=$percent_test" >> report_correction.txt

      - name: Uncovered files
        id: uncovered
        run: |
            uncovered_lines=$(sed -n "/<span class=\"strong\">/p" coverage/lcov-report/index.html | grep "100%" | wc -l)
            echo "uncovered_lines=$uncovered_lines"
            echo "::set-output name=lines::$uncovered_lines"
            echo "::set-output name=total::4"
            sed -n "/<span class=\"strong\">/p" coverage/lcov-report/index.html 

            echo " " >> report_correction.txt
            echo "Uncovered info " >> report_correction.txt
            echo "uncovered_lines=$uncovered_lines" >> report_correction.txt
            sed -n "/<span class=\"strong\">/p" coverage/lcov-report/index.html  >> report_correction.txt

             
      - run: |
          nb_success=${{steps.statistics.outputs.nb_success}}
          total_text_exist=${{steps.statistics.outputs.total_text_exist}}

          num_passed_tests=${{steps.test_stats.outputs.num_passed_tests}}
          nb_total_test=${{steps.test_stats.outputs.nb_total_test}}
        
          uncovered_lines=${{steps.uncovered.outputs.lines}}
          uncovered_lines_total=${{steps.uncovered.outputs.total}}
          
          total=$(( $total_text_exist + $nb_total_test + $uncovered_lines_total ))
          pass=$(( $nb_success + $num_passed_tests + $uncovered_lines))
          note=$(( $pass  / $total )).$(( ($pass  * 100 / $total ) % 100 ))
            
          echo " " 
          echo "Statistiques finales "  >> report_correction.txt
          echo "total=$total" >> report_correction.txt
          echo "pass=$pass" >> report_correction.txt
          echo "note finale=$note"  >> report_correction.txt
          
      - name: get Student name
        run: |
            student_name=$(sed -n '/studentName/p' README.md | sed  's:</studentName>:\'$'\n'':g'  | sed -n 's/.*>//p')
            echo "student_name=$student_name" >> report_correction.txt

      - run: cat report_correction.txt

      - name: Commit report
        run: |
          git config --global user.name 'Yvan Ross'
          git config --global user.email 'yvan.ross@gmail.com'
          git add report_correction.txt
          git commit -am "Automated report generated by Yvan Ross"
          git push

      - name: upload report_correction.txt
        uses: actions/upload-artifact@v2
        with: 
          name: reports
          path: report_*.txt


    env:
        CI: true